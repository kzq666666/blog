<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Blogs Of KZQ</title>
    <link>/posts/blogs/</link>
    <description>Recent content in Posts on Blogs Of KZQ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Feb 2018 12:21:57 -0500</lastBuildDate>
    
	<atom:link href="/posts/blogs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker</title>
      <link>/posts/blogs/docker/</link>
      <pubDate>Thu, 29 Nov 2018 16:25:34 +0800</pubDate>
      
      <guid>/posts/blogs/docker/</guid>
      <description>记录学习docker的过程 特性 标准化 加速开发和构建流程，方便测试。容器可以在开发环境构建，轻松的提交到测试环境，并最终进入生产环境 docke</description>
    </item>
    
    <item>
      <title>VScode配置C环境</title>
      <link>/posts/blogs/vscode_c/</link>
      <pubDate>Tue, 27 Nov 2018 18:39:26 +0800</pubDate>
      
      <guid>/posts/blogs/vscode_c/</guid>
      <description>需要写一些关于C的实验报告，老师给的VC++6.0感觉很难用(字体小而且难看)，于是乎就想用我经常用的vscode编辑器来写C，上网百度了一</description>
    </item>
    
    <item>
      <title>Node</title>
      <link>/posts/blogs/node/</link>
      <pubDate>Tue, 27 Nov 2018 17:04:59 +0800</pubDate>
      
      <guid>/posts/blogs/node/</guid>
      <description>开此篇记录下学习node的过程和一些笔记 1.事件驱动、非堵塞、单线程 2.Node.js是一个非阻塞的系统，当调用一些需要阻塞的等待或者事件，</description>
    </item>
    
    <item>
      <title>Tween.js</title>
      <link>/posts/blogs/tweenjs/</link>
      <pubDate>Sun, 18 Nov 2018 11:22:48 +0800</pubDate>
      
      <guid>/posts/blogs/tweenjs/</guid>
      <description>tween.js - http://github.com/sole/tween.js JavaScript tweening engine for easy animations, incorporating optimised Robert Penner&amp;rsquo;s equations. JavaScript补间引擎，可轻松制作动画，并采用优化的Robert Penner方程。 1.基本用法(Usage</description>
    </item>
    
    <item>
      <title>Command</title>
      <link>/posts/blogs/command/</link>
      <pubDate>Sat, 17 Nov 2018 13:49:47 +0800</pubDate>
      
      <guid>/posts/blogs/command/</guid>
      <description>Linux基本操作 ls -ah 查看所有文件,包括隐藏文件 pwd print working directory 打印当前路径 mv oldname.js newname.js 重命名 cat 查看当前文件 cp: cp &amp;lt;file&amp;gt; &amp;lt;path&amp;gt; 复制file到path路径 cp &amp;lt;file&amp;gt; &amp;lt;copy_name&amp;gt; 复制f</description>
    </item>
    
    <item>
      <title>Three.js</title>
      <link>/posts/blogs/threejs/</link>
      <pubDate>Fri, 16 Nov 2018 23:43:52 +0800</pubDate>
      
      <guid>/posts/blogs/threejs/</guid>
      <description>1.scene 场景 scene就是一个可以放置物体、灯光的3D空间，和现实中的一个空间相似，可大可小 //创建一个场景 var scene = new THREE.Scene(); 2.camera 相机 camera决定看一个</description>
    </item>
    
    <item>
      <title>Q &amp;&amp; A</title>
      <link>/posts/blogs/questions/</link>
      <pubDate>Fri, 16 Nov 2018 10:01:19 +0800</pubDate>
      
      <guid>/posts/blogs/questions/</guid>
      <description>1. Q : return !1 和 return false 以及 return 0! 和 return true写法有什么区别 tween.min.js的源码 update: function(c) { if (0 === a.length) return !1; for ( var b = 0, d = a.length, c = void 0 !== c ? c : Date.now(); b &amp;lt;</description>
    </item>
    
    <item>
      <title>Css3Property</title>
      <link>/posts/blogs/css3property/</link>
      <pubDate>Thu, 01 Nov 2018 21:22:22 +0800</pubDate>
      
      <guid>/posts/blogs/css3property/</guid>
      <description>perspective 设置元素被查看位置的视图 div{ perspective:500px; }</description>
    </item>
    
    <item>
      <title>Typeof</title>
      <link>/posts/blogs/typeof/</link>
      <pubDate>Thu, 01 Nov 2018 17:52:19 +0800</pubDate>
      
      <guid>/posts/blogs/typeof/</guid>
      <description>typeof返回一个字符串,表示为经计算的操作数的类型 typeof(操作数)/typeof 操作数 ()是可以省略的 返回有五种基本类型:stri</description>
    </item>
    
    <item>
      <title>CSS3 Canvas</title>
      <link>/posts/blogs/canvas/</link>
      <pubDate>Wed, 31 Oct 2018 18:52:17 +0800</pubDate>
      
      <guid>/posts/blogs/canvas/</guid>
      <description>Canvas 是 HTML5 新增加的一个元素,它又称为&amp;rdquo;画布&amp;rdquo;,主要有以下四种功能 绘制图形 绘制图表 动画效果 游戏开发 在 chrome 浏览器中,canva</description>
    </item>
    
    <item>
      <title>Hugo主题sam</title>
      <link>/posts/blogs/sam/</link>
      <pubDate>Tue, 30 Oct 2018 22:22:27 +0800</pubDate>
      
      <guid>/posts/blogs/sam/</guid>
      <description>sam ├─archetypes ├─exampleSite │ ├─content │ │ ├─gallery │ │ │ └─images │ │ │ └─small │ │</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>/posts/blogs/hugo/</link>
      <pubDate>Tue, 30 Oct 2018 09:11:33 +0800</pubDate>
      
      <guid>/posts/blogs/hugo/</guid>
      <description>Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。我的博客网站就是通过Hugo来进行部署的,感谢Hugo,让我不</description>
    </item>
    
    <item>
      <title>HelloWorld</title>
      <link>/posts/blogs/helloworld/</link>
      <pubDate>Mon, 29 Oct 2018 21:59:40 +0800</pubDate>
      
      <guid>/posts/blogs/helloworld/</guid>
      <description>Hello World. This is my first blog.</description>
    </item>
    
  </channel>
</rss>